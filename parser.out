Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    MAIN

Grammar

Rule 0     S' -> program
Rule 1     program -> class_decl
Rule 2     class_decl -> PUBLIC CLASS IDENTIFIER LBRACE method_decls RBRACE
Rule 3     method_decls -> method_decl
Rule 4     method_decls -> method_decl method_decls
Rule 5     method_decls -> empty
Rule 6     method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
Rule 7     type -> VOID
Rule 8     type -> IDENTIFIER
Rule 9     params -> param
Rule 10    params -> param COMMA params
Rule 11    params -> empty
Rule 12    param -> type IDENTIFIER
Rule 13    statements -> statement
Rule 14    statements -> statement statements
Rule 15    statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 16    statement -> type IDENTIFIER EQUALS expression SEMICOLON
Rule 17    statement -> IDENTIFIER EQUALS expression SEMICOLON
Rule 18    statement -> RETURN expression SEMICOLON
Rule 19    expression -> term
Rule 20    expression -> expression PLUS term
Rule 21    term -> IDENTIFIER
Rule 22    term -> NUMBER
Rule 23    term -> STRING
Rule 24    empty -> <empty>

Terminals, with rules where they appear

CLASS                : 2
COMMA                : 10
DOT                  : 15 15
EQUALS               : 16 17
IDENTIFIER           : 2 6 8 12 16 17 21
LBRACE               : 2 6
LPAREN               : 6 15
MAIN                 : 
NUMBER               : 22
OUT                  : 15
PLUS                 : 20
PRINTLN              : 15
PUBLIC               : 2 6
RBRACE               : 2 6
RETURN               : 18
RPAREN               : 6 15
SEMICOLON            : 15 16 17 18
STATIC               : 6
STRING               : 23
SYSTEM               : 15
VOID                 : 7
error                : 

Nonterminals, with rules where they appear

class_decl           : 1
empty                : 5 11
expression           : 15 16 17 18 20
method_decl          : 3 4
method_decls         : 2 4
param                : 9 10
params               : 6 10
program              : 0
statement            : 13 14
statements           : 6 14
term                 : 19 20
type                 : 6 12 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_decl
    (2) class_decl -> . PUBLIC CLASS IDENTIFIER LBRACE method_decls RBRACE

    PUBLIC          shift and go to state 3

    program                        shift and go to state 1
    class_decl                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> class_decl .

    $end            reduce using rule 1 (program -> class_decl .)


state 3

    (2) class_decl -> PUBLIC . CLASS IDENTIFIER LBRACE method_decls RBRACE

    CLASS           shift and go to state 4


state 4

    (2) class_decl -> PUBLIC CLASS . IDENTIFIER LBRACE method_decls RBRACE

    IDENTIFIER      shift and go to state 5


state 5

    (2) class_decl -> PUBLIC CLASS IDENTIFIER . LBRACE method_decls RBRACE

    LBRACE          shift and go to state 6


state 6

    (2) class_decl -> PUBLIC CLASS IDENTIFIER LBRACE . method_decls RBRACE
    (3) method_decls -> . method_decl
    (4) method_decls -> . method_decl method_decls
    (5) method_decls -> . empty
    (6) method_decl -> . PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
    (24) empty -> .

    PUBLIC          shift and go to state 7
    RBRACE          reduce using rule 24 (empty -> .)

    method_decls                   shift and go to state 8
    method_decl                    shift and go to state 9
    empty                          shift and go to state 10

state 7

    (6) method_decl -> PUBLIC . STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

    STATIC          shift and go to state 11


state 8

    (2) class_decl -> PUBLIC CLASS IDENTIFIER LBRACE method_decls . RBRACE

    RBRACE          shift and go to state 12


state 9

    (3) method_decls -> method_decl .
    (4) method_decls -> method_decl . method_decls
    (3) method_decls -> . method_decl
    (4) method_decls -> . method_decl method_decls
    (5) method_decls -> . empty
    (6) method_decl -> . PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
    (24) empty -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 3 (method_decls -> method_decl .)
    RBRACE          reduce using rule 3 (method_decls -> method_decl .)
    PUBLIC          shift and go to state 7

  ! RBRACE          [ reduce using rule 24 (empty -> .) ]

    method_decl                    shift and go to state 9
    method_decls                   shift and go to state 13
    empty                          shift and go to state 10

state 10

    (5) method_decls -> empty .

    RBRACE          reduce using rule 5 (method_decls -> empty .)


state 11

    (6) method_decl -> PUBLIC STATIC . type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
    (7) type -> . VOID
    (8) type -> . IDENTIFIER

    VOID            shift and go to state 16
    IDENTIFIER      shift and go to state 15

    type                           shift and go to state 14

state 12

    (2) class_decl -> PUBLIC CLASS IDENTIFIER LBRACE method_decls RBRACE .

    $end            reduce using rule 2 (class_decl -> PUBLIC CLASS IDENTIFIER LBRACE method_decls RBRACE .)


state 13

    (4) method_decls -> method_decl method_decls .

    RBRACE          reduce using rule 4 (method_decls -> method_decl method_decls .)


state 14

    (6) method_decl -> PUBLIC STATIC type . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 17


state 15

    (8) type -> IDENTIFIER .

    IDENTIFIER      reduce using rule 8 (type -> IDENTIFIER .)


state 16

    (7) type -> VOID .

    IDENTIFIER      reduce using rule 7 (type -> VOID .)


state 17

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 18


state 18

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE
    (9) params -> . param
    (10) params -> . param COMMA params
    (11) params -> . empty
    (12) param -> . type IDENTIFIER
    (24) empty -> .
    (7) type -> . VOID
    (8) type -> . IDENTIFIER

    RPAREN          reduce using rule 24 (empty -> .)
    VOID            shift and go to state 16
    IDENTIFIER      shift and go to state 15

    type                           shift and go to state 19
    params                         shift and go to state 20
    param                          shift and go to state 21
    empty                          shift and go to state 22

state 19

    (12) param -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 23


state 20

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 24


state 21

    (9) params -> param .
    (10) params -> param . COMMA params

    RPAREN          reduce using rule 9 (params -> param .)
    COMMA           shift and go to state 25


state 22

    (11) params -> empty .

    RPAREN          reduce using rule 11 (params -> empty .)


state 23

    (12) param -> type IDENTIFIER .

    COMMA           reduce using rule 12 (param -> type IDENTIFIER .)
    RPAREN          reduce using rule 12 (param -> type IDENTIFIER .)


state 24

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 26


state 25

    (10) params -> param COMMA . params
    (9) params -> . param
    (10) params -> . param COMMA params
    (11) params -> . empty
    (12) param -> . type IDENTIFIER
    (24) empty -> .
    (7) type -> . VOID
    (8) type -> . IDENTIFIER

    RPAREN          reduce using rule 24 (empty -> .)
    VOID            shift and go to state 16
    IDENTIFIER      shift and go to state 15

    param                          shift and go to state 21
    params                         shift and go to state 27
    empty                          shift and go to state 22
    type                           shift and go to state 19

state 26

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE
    (13) statements -> . statement
    (14) statements -> . statement statements
    (15) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (16) statement -> . type IDENTIFIER EQUALS expression SEMICOLON
    (17) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (18) statement -> . RETURN expression SEMICOLON
    (7) type -> . VOID
    (8) type -> . IDENTIFIER

    SYSTEM          shift and go to state 32
    IDENTIFIER      shift and go to state 29
    RETURN          shift and go to state 33
    VOID            shift and go to state 16

    type                           shift and go to state 28
    statements                     shift and go to state 30
    statement                      shift and go to state 31

state 27

    (10) params -> param COMMA params .

    RPAREN          reduce using rule 10 (params -> param COMMA params .)


state 28

    (16) statement -> type . IDENTIFIER EQUALS expression SEMICOLON

    IDENTIFIER      shift and go to state 34


state 29

    (17) statement -> IDENTIFIER . EQUALS expression SEMICOLON
    (8) type -> IDENTIFIER .

    EQUALS          shift and go to state 35
    IDENTIFIER      reduce using rule 8 (type -> IDENTIFIER .)


state 30

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 36


state 31

    (13) statements -> statement .
    (14) statements -> statement . statements
    (13) statements -> . statement
    (14) statements -> . statement statements
    (15) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (16) statement -> . type IDENTIFIER EQUALS expression SEMICOLON
    (17) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (18) statement -> . RETURN expression SEMICOLON
    (7) type -> . VOID
    (8) type -> . IDENTIFIER

    RBRACE          reduce using rule 13 (statements -> statement .)
    SYSTEM          shift and go to state 32
    IDENTIFIER      shift and go to state 29
    RETURN          shift and go to state 33
    VOID            shift and go to state 16

    statement                      shift and go to state 31
    statements                     shift and go to state 37
    type                           shift and go to state 28

state 32

    (15) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 38


state 33

    (18) statement -> RETURN . expression SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) term -> . IDENTIFIER
    (22) term -> . NUMBER
    (23) term -> . STRING

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    expression                     shift and go to state 39
    term                           shift and go to state 40

state 34

    (16) statement -> type IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 44


state 35

    (17) statement -> IDENTIFIER EQUALS . expression SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) term -> . IDENTIFIER
    (22) term -> . NUMBER
    (23) term -> . STRING

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    expression                     shift and go to state 45
    term                           shift and go to state 40

state 36

    (6) method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 6 (method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 6 (method_decl -> PUBLIC STATIC type IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .)


state 37

    (14) statements -> statement statements .

    RBRACE          reduce using rule 14 (statements -> statement statements .)


state 38

    (15) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    OUT             shift and go to state 46


state 39

    (18) statement -> RETURN expression . SEMICOLON
    (20) expression -> expression . PLUS term

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 48


state 40

    (19) expression -> term .

    SEMICOLON       reduce using rule 19 (expression -> term .)
    PLUS            reduce using rule 19 (expression -> term .)
    RPAREN          reduce using rule 19 (expression -> term .)


state 41

    (21) term -> IDENTIFIER .

    SEMICOLON       reduce using rule 21 (term -> IDENTIFIER .)
    PLUS            reduce using rule 21 (term -> IDENTIFIER .)
    RPAREN          reduce using rule 21 (term -> IDENTIFIER .)


state 42

    (22) term -> NUMBER .

    SEMICOLON       reduce using rule 22 (term -> NUMBER .)
    PLUS            reduce using rule 22 (term -> NUMBER .)
    RPAREN          reduce using rule 22 (term -> NUMBER .)


state 43

    (23) term -> STRING .

    SEMICOLON       reduce using rule 23 (term -> STRING .)
    PLUS            reduce using rule 23 (term -> STRING .)
    RPAREN          reduce using rule 23 (term -> STRING .)


state 44

    (16) statement -> type IDENTIFIER EQUALS . expression SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) term -> . IDENTIFIER
    (22) term -> . NUMBER
    (23) term -> . STRING

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    expression                     shift and go to state 49
    term                           shift and go to state 40

state 45

    (17) statement -> IDENTIFIER EQUALS expression . SEMICOLON
    (20) expression -> expression . PLUS term

    SEMICOLON       shift and go to state 50
    PLUS            shift and go to state 48


state 46

    (15) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 51


state 47

    (18) statement -> RETURN expression SEMICOLON .

    SYSTEM          reduce using rule 18 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 18 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 18 (statement -> RETURN expression SEMICOLON .)


state 48

    (20) expression -> expression PLUS . term
    (21) term -> . IDENTIFIER
    (22) term -> . NUMBER
    (23) term -> . STRING

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    term                           shift and go to state 52

state 49

    (16) statement -> type IDENTIFIER EQUALS expression . SEMICOLON
    (20) expression -> expression . PLUS term

    SEMICOLON       shift and go to state 53
    PLUS            shift and go to state 48


state 50

    (17) statement -> IDENTIFIER EQUALS expression SEMICOLON .

    SYSTEM          reduce using rule 17 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    VOID            reduce using rule 17 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 17 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)


state 51

    (15) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN expression RPAREN SEMICOLON

    PRINTLN         shift and go to state 54


state 52

    (20) expression -> expression PLUS term .

    SEMICOLON       reduce using rule 20 (expression -> expression PLUS term .)
    PLUS            reduce using rule 20 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS term .)


state 53

    (16) statement -> type IDENTIFIER EQUALS expression SEMICOLON .

    SYSTEM          reduce using rule 16 (statement -> type IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (statement -> type IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> type IDENTIFIER EQUALS expression SEMICOLON .)
    VOID            reduce using rule 16 (statement -> type IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 16 (statement -> type IDENTIFIER EQUALS expression SEMICOLON .)


state 54

    (15) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 55


state 55

    (15) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . expression RPAREN SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) term -> . IDENTIFIER
    (22) term -> . NUMBER
    (23) term -> . STRING

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43

    expression                     shift and go to state 56
    term                           shift and go to state 40

state 56

    (15) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression . RPAREN SEMICOLON
    (20) expression -> expression . PLUS term

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 48


state 57

    (15) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 58


state 58

    (15) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .

    SYSTEM          reduce using rule 15 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 15 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 15 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 15 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 9 resolved using rule (method_decls -> method_decl)
WARNING: rejected rule (empty -> <empty>) in state 9
